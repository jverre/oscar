/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as R404RouteImport } from './routes/_404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChatConversationIdRouteImport } from './routes/chat.$conversationId'
import { Route as AuthenticatedBuildRouteImport } from './routes/_authenticated/build'
import { ServerRoute as ApiUpload_messagesServerRouteImport } from './routes/api/upload_messages'
import { ServerRoute as ApiCreate_conversationServerRouteImport } from './routes/api/create_conversation'
import { ServerRoute as ApiClear_messagesServerRouteImport } from './routes/api/clear_messages'

const rootServerRouteImport = createServerRootRoute()

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/_404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatConversationIdRoute = ChatConversationIdRouteImport.update({
  id: '/chat/$conversationId',
  path: '/chat/$conversationId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedBuildRoute = AuthenticatedBuildRouteImport.update({
  id: '/build',
  path: '/build',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const ApiUpload_messagesServerRoute =
  ApiUpload_messagesServerRouteImport.update({
    id: '/api/upload_messages',
    path: '/api/upload_messages',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiCreate_conversationServerRoute =
  ApiCreate_conversationServerRouteImport.update({
    id: '/api/create_conversation',
    path: '/api/create_conversation',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiClear_messagesServerRoute = ApiClear_messagesServerRouteImport.update({
  id: '/api/clear_messages',
  path: '/api/clear_messages',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/build': typeof AuthenticatedBuildRoute
  '/chat/$conversationId': typeof ChatConversationIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/build': typeof AuthenticatedBuildRoute
  '/chat/$conversationId': typeof ChatConversationIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_404': typeof R404Route
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/build': typeof AuthenticatedBuildRoute
  '/chat/$conversationId': typeof ChatConversationIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/build' | '/chat/$conversationId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/build' | '/chat/$conversationId'
  id:
    | '__root__'
    | '/'
    | '/_404'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/build'
    | '/chat/$conversationId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  ChatConversationIdRoute: typeof ChatConversationIdRoute
}
export interface FileServerRoutesByFullPath {
  '/api/clear_messages': typeof ApiClear_messagesServerRoute
  '/api/create_conversation': typeof ApiCreate_conversationServerRoute
  '/api/upload_messages': typeof ApiUpload_messagesServerRoute
}
export interface FileServerRoutesByTo {
  '/api/clear_messages': typeof ApiClear_messagesServerRoute
  '/api/create_conversation': typeof ApiCreate_conversationServerRoute
  '/api/upload_messages': typeof ApiUpload_messagesServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/clear_messages': typeof ApiClear_messagesServerRoute
  '/api/create_conversation': typeof ApiCreate_conversationServerRoute
  '/api/upload_messages': typeof ApiUpload_messagesServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/clear_messages'
    | '/api/create_conversation'
    | '/api/upload_messages'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/clear_messages'
    | '/api/create_conversation'
    | '/api/upload_messages'
  id:
    | '__root__'
    | '/api/clear_messages'
    | '/api/create_conversation'
    | '/api/upload_messages'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiClear_messagesServerRoute: typeof ApiClear_messagesServerRoute
  ApiCreate_conversationServerRoute: typeof ApiCreate_conversationServerRoute
  ApiUpload_messagesServerRoute: typeof ApiUpload_messagesServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_404': {
      id: '/_404'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/$conversationId': {
      id: '/chat/$conversationId'
      path: '/chat/$conversationId'
      fullPath: '/chat/$conversationId'
      preLoaderRoute: typeof ChatConversationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/build': {
      id: '/_authenticated/build'
      path: '/build'
      fullPath: '/build'
      preLoaderRoute: typeof AuthenticatedBuildRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/upload_messages': {
      id: '/api/upload_messages'
      path: '/api/upload_messages'
      fullPath: '/api/upload_messages'
      preLoaderRoute: typeof ApiUpload_messagesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/create_conversation': {
      id: '/api/create_conversation'
      path: '/api/create_conversation'
      fullPath: '/api/create_conversation'
      preLoaderRoute: typeof ApiCreate_conversationServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/clear_messages': {
      id: '/api/clear_messages'
      path: '/api/clear_messages'
      fullPath: '/api/clear_messages'
      preLoaderRoute: typeof ApiClear_messagesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedBuildRoute: typeof AuthenticatedBuildRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedBuildRoute: AuthenticatedBuildRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  ChatConversationIdRoute: ChatConversationIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiClear_messagesServerRoute: ApiClear_messagesServerRoute,
  ApiCreate_conversationServerRoute: ApiCreate_conversationServerRoute,
  ApiUpload_messagesServerRoute: ApiUpload_messagesServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
